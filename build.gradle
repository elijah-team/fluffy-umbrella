// http://web.archive.org/web/20230906003519/https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-gradle-registry
// https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-gradle-registry

plugins {
    id 'java-library'

id 'maven-publish'
//    id("maven-publish") apply false

//    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
}


repositories {
    mavenLocal()
    maven {        url = uri('https://gitlab.com/api/v4/projects/20346374/packages/maven')    }
    maven {        url = uri('https://gitlab.com/api/v4/projects/21223510/packages/maven')    }
    maven {        url = uri('https://repo.maven.apache.org/maven2/')    }
}

dependencies {
    testImplementation 'junit:junit:4.13.1'

    // https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.10.0'
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher
    testImplementation 'org.junit.platform:junit-platform-launcher:1.10.0'


    api 'com.squareup.okhttp3:okhttp:4.10.0'
    api 'com.codahale.metrics:metrics-healthchecks:3.0.2'
    api 'com.codahale.metrics:metrics-core:3.0.2'
    api 'org.jooq:jool:0.9.14'
    api 'org.hashids:hashids:1.0.3'
    api 'com.typesafe:config:1.4.2'
    api 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    api 'io.undertow:undertow-servlet:2.3.7.Final'
    api 'io.undertow:undertow-core:2.3.7.Final'

    api 'net.java.dev.jna:jna:4.0.0'
    api 'me.friwi:jcefmaven:105.3.36'

    api 'io.reactivex.rxjava3:rxjava:3.1.0'
    api 'org.reactivestreams:reactive-streams:1.0.3'

    api 'org.apache.commons:commons-lang3:3.3'
    api 'commons-codec:commons-codec:1.15'

    api 'org.slf4j:slf4j-simple:1.7.25'
    api 'org.slf4j:slf4j-api:1.7.25'
    api 'org.jdeferred.v2:jdeferred-core:2.0.0'

    api 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.2.200'
    api 'org.jetbrains:annotations:16.0.2'

    api 'antlr:antlr:2.7.7'
    api 'commons-cli:commons-cli:1.4'
    api 'com.github.spotbugs:spotbugs-annotations:4.0.1'

//    api 'com.google.guava:guava:30.0-jre'
    implementation 'com.google.guava:guava:32.1.1-jre'

    api 'tripleo.buffers:buffers-v1:0.0.3'
    api 'tripleo.util.range:range-v1:0.0.3b'

    testImplementation 'org.easymock:easymock:5.1.0'


//    api 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.10'
//    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.9.10'
//    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
//    api 'org.apache.commons:commons-math3:3.6.1'

    testImplementation 'com.tngtech.archunit:archunit:1.1.0'


}

group = 'tripleo.elijah'
version = '0.0.11'
description = 'eljc-v1-fluffy-umbrella'
java.sourceCompatibility = JavaVersion.VERSION_17
//kotlin.sourceCompatibility = JavaVersion.VERSION_17

sourceSets {
    main.java.srcDirs = [
            'src/main/java',
            'src/main-cef/java',
            'src/main-mal/java',
            'src/main-undertow/java'
    ]
//    main.kotlin.srcDirs = [
//            'src/main/java',
//            'src/main-cef/java',
//            'src/main-mal/java',
//            'src/main-undertow/java'
//    ]
//    main.resources.srcDirs = ['src/resources']
}

/*
publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }

  repositories {
    maven {
      name = "GitHubPackages"
      url = "https://maven.pkg.github.com/elijah-team/fluffy-umbrella"
      credentials {
        username = System.getenv("GITHUB_ACTOR")
        password = System.getenv("GITHUB_TOKEN")
      }
    }
  }
}
*/

subprojects {
    apply plugin: "maven-publish"
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/OWNER/REPOSITORY")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }
}
